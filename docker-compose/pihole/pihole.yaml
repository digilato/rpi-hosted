version: "3"

# Manually create a network so we can use static IPs on the backend
networks:
  pihole_net:
    ipam:
      config:
        - subnet: 172.20.0.0/24

# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
services:
  pihole:
    container_name: pihole
    hostname: pihole
    image: pihole/pihole:${PIHOLE_VERSION}
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      # - "67:67/udp"
      - "${HTTP_PORT}:80/tcp" #change to non-standard if using reverse proxy
      - "${HTTPS_PORT}:443/tcp" #change to non-standard if using reverse proxy

    environment:
      TZ: '${TIMEZONE}' # find others at https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
      WEBPASSWORD: ${PIHOLE_PASS} # 'set a secure password here or it will be random'
      PIHOLE_DNS_: "172.20.0.2#5053"
      # This needs to be set because we're running PiHole behind docker
      ServerIP: ${EXTERNAL_IP}

    # Volumes store your data between container upgrades
    volumes:
      - /docker_bind/pihole/pihole:/etc/pihole/
      - /docker_bind/pihole/dnsmasq.d:/etc/dnsmasq.d/'
        
    dns:
      - 127.0.0.1
      - 1.1.1.1
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    # cap_add:
    #   - NET_ADMIN
    restart: always
    networks:
      pihole_net:
        ipv4_address: 172.20.0.10
    depends_on:
      cloudflared:
        condition: service_healthy

  cloudflared:
    container_name: cloudflared
    hostname: cloudflared
    image: crazymax/cloudflared:${CLOUDFLARE_VERSION}
    environment:
      TZ: '${TIMEZONE}'
      TUNNEL_DNS_UPSTREAM: "https://9.9.9.9/dns-query,https://1.1.1.2/dns-query,https://1.0.0.2/dns-query"
    restart: always
    networks:
      pihole_net:
        ipv4_address: 172.20.0.2

# volumes:
#   etc_pihole:
#   etc_dnsmasq: