# The Arrs Stack
# prowlarr - sonarr - radarr - overseerr - readarr - qbittorrent
# GREAT REFERECE https://gist.github.com/stravos97/5c2159d4fb8eb33df75bb4700713e249

networks:
  media-network:
    driver: bridge
 #   ipam:
 #     config:
 #       - subnet: 173.25.0.0/16
 #         gateway: 173.25.0.1      




services:


  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PGID=${GROUP_ID}
      - PUID=${USER_ID}
      - TZ=${TIMEZONE}
      - LOG_LEVEL=${LOG_LEVEL}
      - WEBUI_PORT=8080
    volumes:
      - '${CONFIG_DIR}/qbittorrent/config:/config'
      - '${MEDIA_DIR}/torrents/servarr:/data/torrents'
    ports:
      - "8080:8080"
      - "6881:6881"
      - "6881:6881/udp"
    restart: unless-stopped
    networks:
      - media-network
    healthcheck: # https://github.com/qdm12/gluetun/issues/641#issuecomment-933856220
      test: "curl -sf https://example.com  || exit 1"
      interval: 1m
      timeout: 10s
      retries: 1



  prowlarr:
    image: 'lscr.io/linuxserver/prowlarr:latest'
    container_name: prowlarr
    environment:
      - PGID=${GROUP_ID}
      - PUID=${USER_ID}
      - TZ=${TIMEZONE}
      - LOG_LEVEL=${LOG_LEVEL}
    ports:
      - '9696:9696'
    volumes:
      - '${CONFIG_DIR}/prowlarr/config:/config'
      - '${CONFIG_DIR}/prowlarr/backup:/backup'
      - '${MEDIA_DIR}/torrents/servarr:/data/torrents'
    restart: unless-stopped
    networks:
      - media-network


  sonarr:
    image: lscr.io/linuxserver/sonarr:latest 
    container_name: sonarr
    environment:
      - PGID=${GROUP_ID}
      - PUID=${USER_ID}
      - TZ=${TIMEZONE}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - '${CONFIG_DIR}/sonarr/config:/config'
      - '${CONFIG_DIR}/sonarr/backup:/backup'
      - '${MEDIA_DIR}/torrents/servarr:/data/torrents'
      - '${MEDIA_DIR}/tvshows:/data/tvshows'
    ports:
      - 8989:8989
    restart: unless-stopped
    networks:
      - media-network



  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PGID=${GROUP_ID}
      - PUID=${USER_ID}
      - TZ=${TIMEZONE}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - '${CONFIG_DIR}/radarr/config:/config'
      - '${CONFIG_DIR}/radarr/backup:/backup'
      - '${MEDIA_DIR}/torrents/servarr:/data/torrents'
      - '${MEDIA_DIR}/movies:/data/movies'
    ports:
      - 7878:7878
    restart: unless-stopped
    networks:
      - media-network



  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PGID=${GROUP_ID}
      - PUID=${USER_ID}
      - TZ=${TIMEZONE}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - '${CONFIG_DIR}/readarr/config:/config'
      - '${CONFIG_DIR}/readarr/backup:/backup'
      - '${MEDIA_DIR}/torrents/servarr:/data/torrents'
      - '${MEDIA_DIR}/books:/data/books'
    ports:
      - 8787:8787
    restart: unless-stopped
    networks:
      - media-network



  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - PGID=${GROUP_ID}
      - PUID=${USER_ID}
      - TZ=${TIMEZONE}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - '${CONFIG_DIR}/overseerr/config:/app/config'
    ports:
      - 5055:5055
    restart: unless-stopped
    networks:
      - media-network


  autoheal:
    container_name: autoheal
    deploy:
      replicas: 1
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
    image: willfarrell/autoheal:latest
    network_mode: none
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock


